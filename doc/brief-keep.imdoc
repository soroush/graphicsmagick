<utils apps=all>
</utils>
<utils apps=convert,montage>
<opt>-adjoin</opt>
<abs>join images into a single multi-image file</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-affine <matrix></opt>
<abs>drawing transform matrix</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-antialias</opt>
<abs>remove pixel aliasing</abs>
</utils>
<utils apps=convert>
<opt>-append</opt>
<abs>append a set of images</abs>
</utils>
<utils apps=convert>
<opt>-average</opt>
<abs>average a set of images</abs>
</utils>
<utils apps=animate,display>
<opt>-backdrop <color></opt>
<abs>display the image centered on a backdrop.</abs>
</utils>
<utils apps=animate,composite,convert,display,mogrify,montage>
<opt>-background <color></opt>
<abs>the background color</abs>
</utils>
<utils apps=convert,mogrify,montage>
<opt>-blur <radius>x<sigma></opt>
<abs>blur the image with a gaussian operator</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-border <width>x<height></opt>
<abs>surround the image with a border of color</abs>
</utils>
<utils apps=animate,convert,display,import,mogrify,montage>
<opt>-bordercolor <color></opt>
<abs>the border color</abs>
</utils>
<utils apps=animate,display,montage>
<opt>-borderwidth <geometry></opt>
<abs>the border width</abs>
</utils>
<utils apps=convert>
<opt>-box <color></opt>
<abs>set the color of the annotation bounding box</abs>
</utils>
<utils apps=animate,composite,convert,display,identify,import,mogrify,montage>
<opt>-cache <threshold></opt>
<abs>megabytes of memory available to the pixel cache</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-channel <type></opt>
<abs>the type of channel</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-charcoal <factor></opt>
<abs>simulate a charcoal drawing</abs>
</utils>
<utils apps=animate,convert,montage>
<opt>-chop <width>x<height>{+-}<x offset>{+-}<y offset>{%}</opt>
<abs>remove pixels from the interior of an image</abs>
</utils>
<utils apps=convert>
<opt>-clip</opt>
<abs>apply the clipping path, if one is present</abs>
</utils>
<utils apps=convert>
<opt>-coalesce</opt>
<abs>merge a sequence of images</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-colorize <value></opt>
<abs>colorize the image with the pen color</abs>
</utils>
<utils apps=animate,display>
<opt>-colormap <type></opt>
<abs>define the colormap type</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-colors <value></opt>
<abs>preferred number of colors in the image</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-colorspace <value></opt>
<abs>the type of colorspace</abs>
</utils>
<utils apps=composite,convert,display,import,mogrify,montage>
<opt>-comment <string></opt>
<abs>annotate an image with a comment</abs>
</utils>
<utils apps=convert,composite,montage>
<opt>-compose <operator></opt>
<abs>the type of image composition</abs>
</utils>
<utils apps=convert>
</utils>
<utils apps=convert,composite,montage>
</utils>
<utils apps=composite,convert,display,mogrify,montage>
<opt>-compress <type></opt>
<abs>the type of image compression</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-contrast</opt>
<abs>enhance or reduce the image contrast</abs>
</utils>
<utils apps=animate,convert,display,import,mogrify,montage>
<opt>-crop <width>x<height>{+-}<x offset>{+-}<y offset>{%}</opt>
<abs>preferred size and location of the cropped image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-cycle <amount></opt>
<abs>displace image colormap by amount</abs>
</utils>
<utils apps=animate,composite,conjure,convert,display,identify,import,mogrify,montage>
<opt>-debug</opt>
<abs>enable debug printout</abs>
</utils>
<utils apps=convert>
<opt>-deconstruct</opt>
<abs>break down an image sequence into constituent parts</abs>
</utils>
<utils apps=animate,convert,display,import,mogrify>
<opt>-delay <1/100ths of a second></opt>
<abs>display the next image after pausing</abs>
</utils>
<utils apps=animate,composite,convert,display,identify,import,mogrify,montage>
<opt>-density <width>x<height></opt>
<abs>vertical and horizontal resolution in pixels of the image</abs>
</utils>
<utils apps=animate,composite,convert,display,identify,import,mogrify,montage>
<opt>-depth <value></opt>
<abs>depth of the image</abs>
</utils>
<utils apps=import>
<opt>-descend</opt>
<abs>obtain image by descending window hierarchy</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-despeckle</opt>
<abs>reduce the speckles within an image</abs>
</utils>
<utils apps=composite>
<opt>-displace <horizontal scale>x<vertical scale></opt>
<abs>shift image pixels as defined by a displacement map</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-display <host:display[.screen]></opt>
<abs>specifies the X server to contact</abs>
</utils>
<utils apps=convert>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-dispose <method></opt>
<abs>GIF disposal method</abs>
</utils>
<utils apps=composite>
<opt>-dissolve <percent></opt>
<abs>dissolve an image into another by the given percent</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-dither</opt>
<abs>apply Floyd/Steinberg error diffusion to the image</abs>
</utils>
<utils apps=convert,mogrify,montage>
<opt>-draw <string></opt>
<abs>annotate an image with one or more graphic primitives</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-edge <order></opt>
<abs>detect edges within an image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-emboss</opt>
<abs>emboss an image</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-enhance</opt>
<abs>apply a digital filter to enhance a noisy image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-equalize</opt>
<abs>perform histogram equalization to the image</abs>
</utils>
<utils apps=convert,mogrify,montage>
<opt>-fill <color></opt>
<abs>color to use when filling a graphic primitive</abs>
</utils>
<utils apps=composite,convert,display,mogrify,montage>
<opt>-filter <type></opt>
<abs>use this type of filter when resizing an image</abs>
</utils>
<utils apps=convert>
<opt>-flatten</opt>
<abs>flatten a sequence of images</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-flip</opt>
<abs>create a "mirror image"</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-flop</opt>
<abs>create a "mirror image"</abs>
</utils>
<utils apps=animate,composite,convert,display,mogrify,montage>
<opt>-font <name></opt>
<abs>use this font when annotating the image with text</abs>
</utils>
<utils apps=animate,display>
<opt>-foreground <color></opt>
<abs>define the foreground color</abs>
</utils>
<utils apps=mogrify>
<opt>-format <type></opt>
<abs>the image format type</abs>
</utils>
<utils apps=identify>
<opt>-format <string></opt>
<abs>output formatted image characteristics</abs>
</utils>
<utils apps=convert,display,mogrify,montage>
<opt>-frame <width>x<height>+<outer bevel width>+<inner bevel width></opt>
<abs>surround the image with an ornamental border</abs>
</utils>
<utils apps=import>
<opt>-frame</opt>
<abs>include the X window frame in the imported image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-fuzz <distance{%}></opt>
<abs>colors within this distance are considered equal</abs>
</utils>
<utils apps=animate,convert,display,mogrify,montage>
<opt>-gamma <value></opt>
<abs>level of gamma correction</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-gaussian <radius>x<sigma></opt>
<abs>blur the image with a gaussian operator</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-geometry <width>x<height>{+-}<x offset>{+-}<y offset>{%}{@} {!}{<}{>}</opt>
<abs>preferred size and location of the Image window.</abs>
</utils>
<utils apps=animate,display>
</utils>
<utils apps=composite>
</utils>
<utils apps=import,convert,mogrify>
</utils>
<utils apps=montage>
</utils>
<utils apps=composite,convert,mogrify,montage>
<opt>-gravity <type></opt>
<abs>direction primitive  gravitates to when annotating the image.</abs>
<utils apps=composite>
</utils>
<utils apps=montage>
</utils>
<utils apps=animate,composite,conjure,convert,display,identify,import,mogrify,montage>
<opt>-help</opt>
<abs>print usage instructions</abs>
</utils>
<utils apps=animate,display>
<opt>-iconGeometry <geometry></opt>
<abs>specify the icon geometry</abs>
</utils>
<utils apps=animate,display>
<opt>-iconic</opt>
<abs>iconic animation</abs>
</utils>
<utils apps=display>
<opt>-immutable</opt>
<abs>make image immutable</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-implode <factor></opt>
<abs>implode image pixels about the center</abs>
</utils>
<utils apps=convert>
<opt>-intent <type></opt>
<abs>use this type of rendering intent when managing the image color</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-interlace <type></opt>
<abs>the type of interlacing scheme</abs>
</utils>
<utils apps=composite,convert,display,import,mogrify,montage>
</utils>
<utils apps=composite,convert,display,import,mogrify,montage>
<opt>-label <name></opt>
<abs>assign a label to an image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-level <value></opt>
<abs>adjust the level of image contrast</abs>
</utils>
<utils apps=mogrify>
<opt>-linewidth</opt>
<abs>the line width for subsequent draw operations</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-list <type></opt>
<abs>the type of list</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-loop <iterations></opt>
<abs>add Netscape loop extension to your GIF animation</abs>
</utils>
<utils apps=display>
<opt>-magnify <factor></opt>
<abs>magnify the image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-map <filename></opt>
<abs>choose a particular set of colors from this image</abs>
</utils>
<utils apps=animate,display>
<opt>-map <type></opt>
<abs>
display image using this type.</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-mask <filename></opt>
<abs>Specify a clipping mask</abs>
</utils>
<utils apps=animate,composite,convert,display,mogrify,montage>
<opt>-matte</opt>
<abs>store matte channel if the image has one</abs>
</utils>
<utils apps=animate,display,mogrify,montage>
<opt>-mattecolor <color></opt>
<abs>specify the matte color</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-median <order></opt>
<abs>apply a median filter to the image</abs>
</utils>
<utils apps=montage>
<opt>-mode <value></opt>
<abs>mode of operation</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-modulate <value></opt>
<abs>vary the brightness, saturation, and hue of an image</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-monochrome</opt>
<abs>transform the image to black and white</abs>
</utils>
<utils apps=convert>
<opt>-morph <frames></opt>
<abs>morphs an image sequence</abs>
</utils>
<utils apps=convert>
<opt>-mosaic</opt>
<abs>create a mosaic from an image sequence</abs>
</utils>
<utils apps=animate,display>
<opt>-name</opt>
<abs>name an image</abs>
</utils>
<utils apps=composite,convert,display,import,mogrify>
<opt>-negate</opt>
<abs>replace every pixel with its complementary color</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-noise <value></opt>
<abs>add or reduce noise in an image</abs>
</utils>
<utils apps=animate,convert,display,mogrify,montage>
<opt>-noop</opt>
<abs>NOOP (no option)</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-normalize</opt>
<abs>transform image to span the full range of color values</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-opaque <color></opt>
<abs>change this color to the pen color within the image</abs>
</utils>
<utils apps=composite,convert,display,import,mogrify,montage>
<opt>-page <width>x<height>{+-}<x offset>{+-}<y offset>{%}{!}{<}{>}</opt>
<abs>size and location of an image canvas</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-paint <radius></opt>
<abs>simulate an oil painting</abs>
</utils>
<utils apps=animate>
<opt>-pause <seconds></opt>
<abs>pause between animation loops [animate]</abs>
</utils>
<utils apps=import>
<opt>-pause <seconds></opt>
<abs>pause between snapshots [import]</abs>
</utils>
<utils apps=convert,mogrify,montage>
<opt>-pen <color></opt>
<abs>specify the pen color for drawing operations</abs>
</utils>
<utils apps=convert,identify,import>
<opt>-ping</opt>
<abs>efficiently determine image characteristics</abs>
</utils>
<utils apps=convert,import,mogrify,montage>
<opt>-pointsize <value></opt>
<abs>pointsize of the PostScript, OPTION1, or TrueType font</abs>
</utils>
<utils apps=convert>
<opt>-preview <type></opt>
<abs>image preview type</abs>
</utils>
<utils apps=convert>
<opt>-process <command></opt>
<abs>process a sequence of images</abs>
</utils>
<utils apps=composite,convert,mogrify>
<opt>-profile <filename></opt>
<abs>add ICM, IPTC, or generic profile  to image</abs>
</utils>
<utils apps=composite,convert,display,import,mogrify,montage>
<opt>-quality <value></opt>
<abs>JPEG/MIFF/PNG compression level</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-raise <width>x<height></opt>
<abs>lighten or darken image edges</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-region <width>x<height>{+-}<x offset>{+-}<y offset></opt>
<abs>apply options to a portion of the image</abs>
</utils>
<utils apps=animate,display>
<opt>-remote</opt>
<abs>perform a remote operation</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-resample <horizontal>x<vertical></opt>
<abs>Resample image to specified horizontal and vertical resolution</abs>
</utils>
<utils apps=composite,convert,import,mogrify,montage>
<opt>-resize <width>x<height>{+-}<x offset>{+-}<y offset>{%}{@}{!}{<}{>}</opt>
<abs>resize and locate an image</abs>
</utils>
<utils apps=convert,import,mogrify>
</utils>
<utils apps=all>
</utils>
<utils apps=composite>
</utils>
<utils apps=montage>
</utils>
<utils apps=convert,display,mogrify>
<opt>-roll {+-}<x offset>{+-}<y offset></opt>
<abs>roll an image vertically or horizontally</abs>
</utils>
<utils apps=animate,composite,convert,display,import,mogrify,montage>
<opt>-rotate <degrees{<}{>}></opt>
<abs>apply Paeth image rotation to the image</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-sample <geometry></opt>
<abs>scale image with pixel sampling</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-scale <geometry></opt>
<abs>scale the image.</abs>
</utils>
<utils apps=composite,convert,import,mogrify>
<opt>-scene <value></opt>
<abs>set scene number</abs>
</utils>
<utils apps=animate,display,montage>
<opt>-scenes <value-value></opt>
<abs>range of image scene numbers to read</abs>
</utils>
<utils apps=import>
<opt>-snaps <value></opt>
<abs>number of screen snapshots</abs>
</utils>
<utils apps=import>
<opt>-screen</opt>
<abs>specify the screen to capture</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-seed <value></opt>
<abs>pseudo-random number generator seed value</abs>
</utils>
<utils apps=convert,display,mogrify>
<opt>-segment <cluster threshold>x<smoothing threshold></opt>
<abs>segment an image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-shade <azimuth>x<elevation></opt>
<abs>shade the image using a distant light source</abs>
</utils>
<utils apps=montage>
<opt>-shadow <radius>x<sigma></opt>
<abs>shadow the montage</abs>
</utils>
<utils apps=animate,display>
<opt>-shared_memory</opt>
<abs>use shared memory</abs>
</utils>
<utils apps=composite,convert,display,montage,mogrify>
<opt>-sharpen <radius>x<sigma></opt>
<abs>sharpen the image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-shave <width>x<height></opt>
<abs>shave pixels from the image edges</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-shear <x degrees>x<y degrees></opt>
<abs>shear the image along the X or Y axis</abs>
</utils>
<utils apps=import>
<opt>-silent</opt>
<abs>operate silently</abs>
</utils>
<utils apps=animate,composite,convert,display,identify,mogrify,montage>
<opt>-size <width>x<height>{+offset}</opt>
<abs>width and height of the image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-solarize <factor></opt>
<abs>negate all pixels above the threshold level</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-spread <amount></opt>
<abs>displace image pixels by a random amount</abs>
</utils>
<utils apps=composite>
<opt>-stegano <offset></opt>
<abs>hide watermark within an image</abs>
</utils>
<utils apps=composite>
<opt>-stereo</opt>
<abs>composite two images to create a stereo anaglyph</abs>
<utils apps=convert,mogrify,montage>
<opt>-stroke <color></opt>
<abs>color to use when stroking a graphic primitive</abs>
</utils>
<utils apps=convert,mogrify,montage>
<opt>-strokewidth <value></opt>
<abs>set the stroke width</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-swirl <degrees></opt>
<abs>swirl image pixels about the center</abs>
</utils>
<utils apps=animate,display>
<opt>-text_font <name></opt>
<abs>font for writing fixed-width text</abs>
</utils>
<utils apps=convert,display,mogrify,montage>
<opt>-texture <filename></opt>
<abs>name of texture to tile onto the image background</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-threshold <value></opt>
<abs>threshold the image</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-tile <filename></opt>
<abs>tile image when filling a graphic primitive</abs>
</utils>
<utils apps=montage>
<opt>-tile <geometry></opt>
<abs>layout of images</abs>
</utils>
<utils apps=animate,display,montage>
<opt>-title <string></opt>
<abs>assign a title to the displayed image</abs>
</utils>
<utils apps=convert,import,mogrify,montage>
<opt>-transparent <color></opt>
<abs>make this color transparent within the image</abs>
</utils>
<utils apps=animate,composite,convert,display,mogrify,montage>
<opt>-treedepth <value></opt>
<abs>tree depth for the color reduction algorithm</abs>
</utils>
<utils apps=animate,convert,composite,display,import,mogrify,montage>
<opt>-trim</opt>
<abs>trim an image</abs>
</utils>
<utils apps=composite,convert,mogrify,montage>
<opt>-type <type></opt>
<abs>the image type</abs>
</utils>
<utils apps=display>
<opt>-update <seconds></opt>
<abs>
detect when image file is modified and redisplay.</abs>
<utils apps=composite,convert,mogrify>
<opt>-units <type></opt>
<abs>the type of image resolution</abs>
</utils>
<utils apps=composite,convert,mogrify>
<opt>-unsharp <radius>x<sigma></opt>
<abs>sharpen the image with an unsharp mask operator</abs>
</utils>
<utils apps=display,convert>
<opt>-use_pixmap</opt>
<abs>use the pixmap</abs>
</utils>
<utils apps=animate,composite,conjure,convert,display,identify,import,mogrify,montage>
<opt>-verbose</opt>
<abs>print detailed information about the image</abs>
</utils>
<utils apps=identify>
</utils>
<utils apps=convert,mogrify>
<opt>-view <string></opt>
<abs>FlashPix viewing parameters</abs>
</utils>
<utils apps=animate,display>
<opt>-visual <type></opt>
<abs>animate images using this X visual type</abs>
</utils>
<utils apps=composite>
<opt>-watermark <brightness>x<saturation></opt>
<abs>percent brightness and saturation of a watermark</abs>
</utils>
<utils apps=convert,mogrify>
<opt>-wave <amplitude>x<wavelength></opt>
<abs>alter an image along a sine wave</abs>
</utils>
<utils apps=animate,display>
<opt>-window <id></opt>
<abs>make image the background of a window</abs>
</utils>
<utils apps=display>
<opt>-window_group</opt>
<abs>specify the window group</abs>
</utils>
<utils apps=composite,convert>
<opt>-write <filename></opt>
<abs>write  an image sequence [<i>convert, composite</i>]</abs>
</utils>
<utils apps=display>
<opt>-write</opt>
<abs>write the image to a file [<i>display</i>]</abs>
</utils>
