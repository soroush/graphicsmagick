.TH montage 1 "$Date$" "ImageMagick"
.SH NAME

montage - creates a composite image by combining several separate images

.SH SYNOPSIS

\fBmontage\fP \fB[\fP \fIoptions\fP \fB...]\fP \fIfile\fP [ [
\fIoptions\fP ...] \fIfile\fP ...] \fIoutput_file\fP

.SH DESCRIPTION

\fBmontage\fP creates a composite image by combining several separate
images. The images are tiled on the composite image with the name of the
image optionally appearing just below the individual tile.

The composite image is constructed in the following manner. First, each
image specified on the command line, except for the last, is scaled to
fit the maximum tile size. The maximum tile size by default is 120x120.
It can be modified with the \fB-geometry\fP command line argument or X
resource. See
\fBOptions\fP for more information on
command line arguments. See
\fBX(1)\fP for more information on X resources.
Note that the maximum tile size need not be a square. To respect the aspect
ratio of each image append \fB~\fP to the geometry specification.

Next the composite image is initialized with the color specified by the
\fB-background\fP
command line argument or X resource. The width and height of the composite
image is determined by the title specified, the maximum tile size, the
number of tiles per row, the tile border width and height, the image border
width, and the label height. The number of tiles per row specifies how
many images are to appear in each row of the composite image. The default
is to have 5 tiles in each row and 4 tiles in each column of the composite.
A specific value is specified with \fB-tile\fP. The tile border width
and height, and the image border width defaults to the value of the X resource
\fB-borderwidth\fP. It can be changed with the \fB-borderwidth\fP or
\fB-geometry\fP command line argument or X resource. The label height
is determined by the font you specify with the \fB-font\fP command line
argument or X resource. If you do not specify a font, a font is chosen
that allows the name of the image to fit the maximum width of a tiled area.
The label colors is determined by the \fB-background\fP and \fB-fill\fP
command line argument or X resource. Note, that if the background and pen
colors are the same, labels will not appear.

Initially, the composite image title is placed at the top if one is specified
(refer to \fB-fill\fP). Next, each image is set onto the composite image,
surrounded by its border color, with its name centered just below it. The
individual images are left-justified within the width of the tiled area.
The order of the images is the same as they appear on the command line
unless the images have a scene keyword. If a scene number is specified
in each image, then the images are tiled onto the composite in the order
of their scene number. Finally, the last argument on the command line is
the name assigned to the composite image. By default, the image is written
in the \fBMIFF\fP format and can be viewed or printed with \fBdisplay\fP.

Note, that if the number of tiles exceeds the default number of 20 (5 per
row, 4 per column), more than one composite image is created. To ensure
a single image is produced, use \fB-tile\fP to increase the number of
tiles to meet or exceed the number of input images.

Finally, to create one or more empty spaces in the sequence of tiles, use
the \fBNULL\fP image format.
.SH EXAMPLES

To create a montage of a cockatoo, a parrot, and a hummingbird and write
it to a file called birds, use:

    montage cockatoo.miff parrot.miff hummingbird.miff \\
            birds.miff

To tile several bird images so that they are at most 256 pixels in width
and 192 pixels in height, surrounded by a red border, and separated by
10 pixels of background color, use:

    montage -geometry 256x192"+1"0"+1"0 -bordercolor \\
            red birds.* montage.miff

To create an unlabeled parrot image, 640 by 480 pixels, and surrounded
by a border of black, use:

    montage -geometry 640x480 -bordercolor black \\
            -label "" parrot.miff
bird.miff

To create an image of an eagle with a textured background, use:

    montage -texture bumps.jpg eagle.jpg eagle.png

To join several GIF images together without any extraneous graphics (e.g.
no label, no shadowing, no surrounding tile frame), use:

    montage +frame +shadow +label -tile 5x1 \\
            -geometry 50x50+0+0 *.png joined.png
.SH OPTIONS

Options are processed in command line order. Any option you specify on
the command line remains in effect until it is explicitly changed by specifying
the option again with a different effect. For example, to montage two images,
the first with 32 colors and the second with only 16 colors, use:

     montage -colors 32 cockatoo.1 -colors 16 cockatoo.2 \\
             cockatoo.miff
.TP
.B "-adjoin"
\fRjoin images into a single multi-image file

By default, all images of an image sequence are stored in the same
file. However, some formats (e.g. JPEG) do not support more than one image
and are saved to separate files. Use \fB+adjoin\fP to force this
behavior.

.TP
.B "-background \fIcolor"\fP
\fRthe background color
.TP
.B "-blur \fI<radius>x<sigma>"\fP
\fRblur the image with a gaussian operator

Blur with the given radius and
standard deviation (sigma).

.TP
.B "-bordercolor \fIcolor"\fP
\fRthe border color
.TP
.B "-borderwidth \fIcolor"\fP
\fRthe border width
.TP
.B "-cache \fIthreshold"\fP
\fRmegabytes of memory available to the pixel cache

Image pixels are stored in memory until 80 megabytes of memory have been
consumed. Subsequent pixel operations are cached on disk. Operations to
memory are significantly faster but if your computer does not have a sufficient
amount of free memory you may want to adjust this threshold value.

.TP
.B "-chop \fI<width>x<height>{+-}<x offset>{+-}<y offset>{%}"\fP
\fRremove pixels from the interior of an image

The width and height give the number of columns and rows to remove,
and the offsets give the location of the leftmost column and topmost
row to remove.


The \fB-chop\fP option removes entire rows and columns,
and moves the remaining corner blocks leftward and upward to close the gaps.

.TP
.B "-colors \fIvalue"\fP
\fRpreferred number of colors in the image

The actual number of colors in the image may be less than your request,
but never more. Note, this is a color reduction option. Images with less
unique colors than specified with this option will have any duplicate or
unused colors removed. Refer to quantize for
more details.


Note, options \fB-dither\fP, \fB-colorspace\fP, and \fB-treedepth\fP
affect the color reduction algorithm.

.TP
.B "-colorspace \fIvalue"\fP
\fRthe type of colorspace

Choices are: \fBGRAY\fP, \fBOHTA\fP, \fBRGB\fP,
\fBTransparent\fP,
\fBXYZ\fP,
\fBYCbCr\fP, \fBYIQ\fP, \fBYPbPr\fP,
\fBYUV\fP, or \fBCMYK\fP.


Color reduction, by default, takes place in the RGB color space. Empirical
evidence suggests that distances in color spaces such as YUV or YIQ correspond
to perceptual color differences more closely than do distances in RGB space.
These color spaces may give better results when color reducing an image.
Refer to quantize for more details.


The \fBTransparent\fP color space behaves uniquely in that it preserves
the matte channel of the image if it exists.


The \fB-colors\fP or \fB-monochrome\fP option is required for this
option to take effect.

.TP
.B "-comment \fIstring"\fP
\fRannotate an image with a comment

Use this option to assign a specific comment to the image. You can include the
image filename, type, width, height, or other image attribute by embedding
special format characters:


     %b   file size
     %c   comment
     %d   directory
     %e   filename extention
     %f   filename
     %h   height
     %i   input filename
     %k   number of unique colors
     %l   label
     %m   magick
     %n   number of scenes
     %o   output filename
     %p   page number
     %q   quantum depth
     %s   scene number
     %t   top of filename
     %u   unique temporary filename
     %w   width
     %x   x resolution
     %y   y resolution
     \\n   newline
     \\r   carriage return

For example,


     -comment "%m:%f %wx%h"

produces an image comment of \fBMIFF:bird.miff 512x480\fP for an image
titled \fBbird.miff\fP and whose width is 512 and height is 480.


If the first character of \fIstring\fP is \fI@\fP, the image comment
is read from a file titled by the remaining characters in the string.

.TP
.B "-compose \fIoperator"\fP
\fRthe type of image composition

By default, each of the composite image pixels are replaced by the
corresponding image tile pixel. You can choose an alternate composite
operation:


     Over
     In
     Out
     Atop
     Xor
     Plus
     Minus
     Add
     Subtract
     Difference
     Multiply
     Bumpmap
     Copy
     CopyRed
     CopyGreen
     CopyBlue
     CopyOpacity

How each operator behaves is described below.

.in 15

.in 15
.B "Over"
.in 20
 \fR
.in 20

The result will be the union of the two image shapes, with opaque areas of
\fIcomposite image\fP obscuring \fIimage\fP in the region of overlap.

.in 15
.in 15
.B "In"
.in 20
 \fR
.in 20

The result is simply \fIcomposite image\fP cut by the shape
of \fIimage\fP.
None of the image data of \fIimage\fP will be in the result.

.in 15
.in 15
.B "Out"
.in 20
 \fR
.in 20

The resulting image is \fIcomposite image\fP with the shape
of \fIimage\fP cut out.

.in 15
.in 15
.B "Atop"
.in 20
 \fR
.in 20

The result is the same shape as image \fIimage\fP,
with \fIcomposite image\fP
obscuring \fIimage\fP where the image shapes overlap.  Note this differs
from \fBover\fP because the portion of \fIcomposite image\fP outside
\fIimage\fP's shape does not appear in the result.

.in 15
.in 15
.B "Xor"
.in 20
 \fR
.in 20

The result is the image data from both \fIcomposite image\fP and
\fIimage\fP
that is outside the overlap region.  The overlap region will be blank.

.in 15
.in 15
.B "Plus"
.in 20
 \fR
.in 20

The result is just the sum of the image data.  Output values are
cropped to 255 (no overflow).  This operation is independent of the
matte channels.

.in 15
.in 15
.B "Minus"
.in 20
 \fR
.in 20

The result of \fIcomposite image\fP - \fIimage\fP, with underflow
cropped to
zero.  The matte channel is ignored (set to 255, full coverage).

.in 15
.in 15
.B "Add"
.in 20
 \fR
.in 20

The result of \fIcomposite image\fP + \fIimage\fP, with overflow wrapping
around (\fImod\fP 256).

.in 15
.in 15
.B "Subtract"
.in 20
 \fR
.in 20

The result of \fIcomposite image\fP - \fIimage\fP, with underflow wrapping
around (\fImod\fP 256).  The \fBadd\fP and \fBsubtract\fP operators can be
used to perform reversible transformations.

.in 15
.in 15
.B "Difference"
.in 20
 \fR
.in 20

The result of abs(\fIcomposite image\fP - \fIimage\fP).  This is useful
for comparing two very similar images.

.in 15
.in 15
.B "Multiply"
.in 20
 \fR
.in 20

The result of \fIcomposite image\fP * \fIimage\fP.  This is useful for
the creation of drop-shadows.

.in 15
.in 15
.B "Bumpmap"
.in 20
 \fR
.in 20

The result \fIimage\fP shaded by \fIcomposite image\fP.

.in 15
.in 15
.B "Copy"
.in 20
 \fR
.in 20

The resulting image is \fIimage\fP replaced with \fIcomposite image\fP.
Here the matte information is ignored.

.in 15
.in 15
.B "CopyRed"
.in 20
 \fR
.in 20

The resulting image is the red layer in \fIimage\fP replaced with the red
layer in \fIcomposite image\fP.  The other layers are copied untouched.

.in 15
.in 15
.B "CopyGreen"
.in 20
 \fR
.in 20

The resulting image is the green layer in \fIimage\fP replaced with the green
layer in \fIcomposite image\fP.  The other layers are copied untouched.

.in 15
.in 15
.B "CopyBlue"
.in 20
 \fR
.in 20

The resulting image is the blue layer in \fIimage\fP replaced with the blue
layer in \fIcomposite image\fP.  The other layers are copied untouched.

.in 15
.in 15
.B "CopyOpacity"
.in 20
 \fR
.in 20

The resulting image is the matte layer in \fIimage\fP replaced with the matte
layer in \fIcomposite image\fP.  The other layers are copied untouched.

.in 15


The image compositor requires a matte, or alpha channel in the image
for some operations.  This extra channel usually defines a mask which
represents a sort of a cookie-cutter for the image.  This is the case
when matte is 255 (full coverage) for pixels inside the shape, zero
outside, and between zero and 255 on the boundary.  For certain
operations, if \fIimage\fP does not have a matte channel, it is initialized
with 0 for any pixel matching in color to pixel location (0,0), otherwise
255 (to work properly \fBborderwidth\fP must be 0).

.TP
.B "-compress \fItype"\fP
\fRthe type of image compression

Choices are: \fINone\fP, \fIBZip\fP, \fIFax\fP,
\fIGroup4\fP,
\fIJPEG\fP,
\fILZW\fP, \fIRLE\fP or \fIZip\fP.


Specify \fB+compress\fP to store the binary image in an uncompressed format.
The default is the compression type of the specified image file.

.TP
.B "-crop \fI<width>x<height>{+-}<x offset>{+-}<y offset>{%}"\fP
\fRpreferred size and location of the cropped image

See \fIX(1)\fP for details
about the geometry specification.


The width and height give the size of the image that remains after cropping,
and the offsets give the location of the top left corner of the cropped
image with respect to the original image.  To specify the amount to be
removed, use \fB-shave\fP instead.


To specify a percentage width or height to be removed instead, append
\fB%\fP. For example
to crop the image by ten percent (five percent on each side of the image),
use \fB-crop 10%\fP.


Use cropping to apply image processing options to, or display, a particular
area of an image.


Omit the x and y offset to generate one or more subimages of a uniform
size.


Use cropping to crop a particular area of an image. Use \fB-crop 0x0\fP
to trim edges that are the background color. Add an x and y offset to leave
a portion of the trimmed edges with the image.

.TP
.B "-debug"
\fRenable debug printout
.TP
.B "-density \fI<width>x<height>"\fP
\fRvertical and horizontal resolution in pixels of the image

This option specifies an image density when decoding a \fIPostScript\fP
or Portable Document page. The default is 72 dots per inch in the horizontal
and vertical direction. This option is used in concert with \fB-page\fP.

.TP
.B "-depth \fIvalue"\fP
\fRdepth of the image

This is the number of bits in a pixel. The only acceptable
values are 8 or 16.  Use this option to specify the depth of raw images whose
depth is unknown such as GRAY, RGB, or CMYK, or to change the depth of any
image after it has been read.

.TP
.B "-display \fIhost:display[.screen]"\fP
\fRspecifies the X server to contact
.TP
.B "-dispose \fImethod"\fP
\fRGIF disposal method

Here are the valid methods:


     0     No disposal specified.
     1     Do not dispose between frames.      
     2     Overwrite frame with background color from header.
     3     Overwrite with previous frame.
.TP
.B "-dither"
\fRapply Floyd/Steinberg error diffusion to the image

The basic strategy of dithering is to trade intensity resolution for spatial
resolution by averaging the intensities of several neighboring pixels.
Images which suffer from severe contouring when reducing colors can be
improved with this option.


The \fB-colors\fP or \fB-monochrome\fP option is required for this option
to take effect.


Use \fB+dither\fP to render Postscript without text or graphic aliasing.

.TP
.B "-draw \fIstring"\fP
\fRannotate an image with one or more graphic primitives

Use this option to annotate an image with one or more graphic primitives.
The primitives include


     point
     line
     rectangle
     roundRectangle
     arc
     ellipse
     circle
     polyline
     polygon
     bezier
     path
     color
     matte
     text
     image

\fBPoint\fP and
\fBline\fP each require a single coordinate.
\fBLine\fP requires a start and end coordinate, while
\fBrectangle\fP
expects an upper left and lower right coordinate.
\fBroundRectangle\fP has a center coordinate, a width and
height, and the width and height of the corners.
\fBCircle\fP has a center coordinate and a coordinate for
the outer edge.  Use \fBArc\fP to circumscribe an arc within
a rectangle.  Arcs require a start and end point as well as the degree
of rotation (e.g. 130,30 200,100 45,90).
Use \fBEllipse\fP to draw a partial ellipse
centered at the given point with the x-axis and y-axis radius
and start and end of arc in degrees (e.g. 100,100 100,150 0,360).
Finally, \fBpolyline\fP and \fBpolygon\fP require
three or more coordinates to define its boundaries.
Coordinates are integers separated by an optional comma.  For example,
to define a circle centered at 100,100
that extends to 150,150 use:


     -draw 'circle 100,100 150,150'

See Paths.
Paths
represent an outline of an object which is defined in terms of
moveto (set a new current point), lineto (draw a straight line),
curveto (draw a curve using a cubic bezier), arc (elliptical or
circular arc) and closepath (close the current shape by drawing a line
to the last moveto) elements. Compound paths (i.e., a path with
subpaths, each consisting of a single moveto followed by one or more
line or curve operations) are possible to allow effects such as "donut
holes" in objects.


Use \fBcolor\fP to change the color of a pixel. Follow the pixel coordinate
with a method:


     point
     replace
     floodfill
     filltoborder
     reset

Consider the target pixel as that specified by your coordinate. The
\fBpoint\fP
method recolors the target pixel. The \fBreplace\fP method recolors any
pixel that matches the color of the target pixel.
\fBFloodfill\fP recolors
any pixel that matches the color of the target pixel and is a neighbor,
whereas \fBfilltoborder\fP recolors any neighbor pixel that is not the
border color. Finally, \fBreset\fP recolors all pixels.


Use \fBmatte\fP to the change the pixel matte value to transparent. Follow
the pixel coordinate with a method (see the \fBcolor\fP primitive for
a description of methods). The \fBpoint\fP method changes the matte value
of the target pixel. The \fBreplace\fP method changes the matte value
of any pixel that matches the color of the target pixel. \fBFloodfill\fP
changes the matte value of any pixel that matches the color of the target
pixel and is a neighbor, whereas
\fBfilltoborder\fP changes the matte
value of any neighbor pixel that is not the border color (\fB-bordercolor\fP).
Finally \fBreset\fP changes the matte value of all pixels.


Use \fBtext\fP to annotate an image with text. Follow the text coordinates
with a string. If the string has embedded spaces, enclose it in double
quotes. Optionally you can include the image filename, type, width, height,
or other image attribute by embedding special format character.
See \fB-comment\fP for details.


For example,


     -draw 'text 100,100 "%m:%f %wx%h"'

annotates the image with MIFF:bird.miff 512x480 for an image titled
bird.miff
and whose width is 512 and height is 480.


Use \fBimage\fP to composite an image with another image. Follow the
image keyword with the composite operator, image location, image size,
and filename:


     -draw 'image Over 100,100 225,225 image.jpg'

See \fB-compose\fP for a description of the composite operators.


If the first character of \fIstring\fP is \fI@\fP, the text is read from
a file titled by the remaining characters in the string.


You can set the primitive color, font color, and font bounding box
color with
\fB-fill\fP, \fB-font\fP, and \fB-box\fP respectively. Options
are processed in command line order so be sure to use \fB-fill\fP \fIbefore\fP
the \fB-draw\fP option.

.TP
.B "-fill \fIcolor"\fP
\fRcolor to use when filling a graphic primitive

See \fB-draw\fP for further
details.

.TP
.B "-filter \fItype"\fP
\fRuse this type of filter when resizing an image

Use this option to affect the resizing operation of an image (see
\fB-geometry\fP).
Choose from these filters:


     Point
     Box
     Triangle
     Hermite
     Hanning
     Hamming
     Blackman
     Gaussian
     Quadratic
     Cubic
     Catrom
     Mitchell
     Lanczos
     Bessel
     Sinc

The default filter is \fBLanczos\fP

.TP
.B "-font \fIname"\fP
\fRuse this font when annotating the image with text

You can tag a font to specify whether it is a Postscript, Truetype, or OPTION1
font.  For example, Arial.ttf is a Truetype font, ps:helvetica
is Postscript, and x:fixed is OPTION1. 

.TP
.B "-frame
<width>x<height>+<outer bevel width>+<inner bevel width>"
\fRsurround the image with an ornamental border

See \fIX(1)\fP for details
about the geometry specification.


The color of the border is specified with the
\fB-mattecolor\fP command
line option.

.TP
.B "-gamma \fIvalue"\fP
\fRlevel of gamma correction

The same color image displayed on two different workstations may look different
due to differences in the display monitor. Use gamma correction to adjust
for this color difference. Reasonable values extend from \fB0.8\fP to
\fB2.3\fP.


You can apply separate gamma values to the red, green, and blue channels
of the image with a gamma value list delineated with slashes
(i.e. \fB1.7\fP/\fB2.3\fP/\fB1.2\fP).


Use \fB+gamma\fP \fIvalue\fP
to set the image gamma level without actually adjusting
the image pixels. This option is useful if the image is of a known gamma
but not set as an image attribute (e.g. PNG images).

.TP
.B "-geometry \fI<width>x<height>{+-}<x offset>{+-}<y offset>{%}{@}{!}{<}{>}"\fP
\fRpreferred size and location of the Image window.

See \fIX(1)\fP for details
about the geometry specification. By default, the window size is the image
size and the location is chosen by you when it is mapped.


By default, the width and height are maximum values. That is, the image
is expanded or contracted to fit the width and height value while maintaining
the aspect ratio of the image. \fIAppend an exclamation point to the geometry
to force the image size to exactly the size you specify\fP. For example,
if you specify \fB640x480!\fP the image width is set to 640 pixels and
height to 480. If only one factor is specified, both the width and height
assume the value.


To specify a percentage width or height instead, append %. The image size
is multiplied by the width and height percentages to obtain the final image
dimensions. To increase the size of an image, use a value greater than
100 (e.g. 125%). To decrease an image's size, use a percentage less than
100.


Use \fB@\fP to specify the maximum area in pixels of an image.


Use \fB>\fP to change the dimensions of the image \fIonly\fP if
its size exceeds the geometry specification. \fB<\fP resizes the image
\fIonly\fP
if its dimensions is less than the geometry specification. For example,
if you specify \fB'640x480>'\fP and the image size is 512x512, the image
size does not change. However, if the image is 1024x1024, it is resized
to 640x480.


Use \fB<\fP to change the dimensions of the image \fIonly\fP if
its size exceeds the geometry specification. \fB>\fP resizes the image
\fIonly\fP
if its dimensions is less than the geometry specification. For example,
if you specify \fB640x480>\fP and the image size is 512x512, the image
size does not change. However, if the image is 1024x1024, it is resized
to 640x480.


There are 72 pixels per inch in PostScript coordinates.

.TP
.B "-gravity \fItype"\fP
\fRdirection text gravitates to when annotating the image.

Choices are: NorthWest, North,
NorthEast, West, Center, East, SouthWest, South, SouthEast. See X(1) for
details about the gravity specification.


The direction you choose specifies where to position the text when annotating
the image. For example \fICenter\fP gravity forces the text to be centered
within the image. By default, the image gravity is \fINorthWest\fP.

.TP
.B "-help"
\fRprint usage instructions
.TP
.B "-interlace \fItype"\fP
\fRthe type of interlacing scheme

Choices are: \fBNone, Line, Plane,\fP
or \fBPartition\fP. The default is \fBNone\fP.


This option is used to specify the type of interlacing scheme for raw image
formats such as \fBRGB\fP or \fBYUV\fP. \fBNone\fP means do not interlace
(RGBRGBRGBRGBRGBRGB...), \fBLine\fP uses scanline interlacing
(RRR...GGG...BBB...RRR...GGG...BBB...),
and \fBPlane\fP uses plane interlacing (RRRRRR...GGGGGG...BBBBBB...).
\fBPartition\fP
is like plane except the different planes are saved to individual files
(e.g. image.R, image.G, and image.B).


Use \fBLine\fP, or \fBPlane\fP to create an
\fBinterlaced PNG\fP or \fB GIF\fP or
\fBprogressive JPEG\fP image.

.TP
.B "-label \fIname"\fP
\fRassign a label to an image

Use this option to assign a specific label to the image. Optionally you
can include the image filename, type, width, height, or other image attribute
by embedding special format character. See \fB-comment\fP for details.


For example,


     -label "%m:%f %wx%h"

produces an image label of \fBMIFF:bird.miff 512x480\fP for an image titled
\fBbird.miff\fP
and whose width is 512 and height is 480.


If the first character of \fIstring\fP is \fI@\fP, the image label is
read from a file titled by the remaining characters in the string.


When converting to \fIPostScript\fP, use this option to specify a header
string to print above the image. Specify the label font with
\fB-font\fP.

.TP
.B "-matte"
\fRstore matte channel if the image has one

If the image does not have a matte channel, create an opaque one.

.TP
.B "-mattecolor \fIcolor"\fP
\fRspecify the matte color
.TP
.B "-mode \fIvalue"\fP
\fRmode of operation
.TP
.B "-monochrome"
\fRtransform the image to black and white
.TP
.B "-page \fI<width>x<height>{+-}<x offset>{+-}<y offset>{%}{!}{<}{>}"\fP
\fRsize and location of an image canvas

Use this option to specify the dimensions of the
\fIPostScript\fP page
in dots per inch or a TEXT page in pixels. The choices for a Postscript
page are:


     11x17         792  1224 
     Ledger       1224   792    
     Legal         612  1008
     Letter        612   792
     LetterSmall   612   792
     ArchE        2592  3456
     ArchD        1728  2592
     ArchC        1296  1728
     ArchB         864  1296
     ArchA         648   864
     A0           2380  3368
     A1           1684  2380
     A2           1190  1684
     A3            842  1190
     A4            595   842
     A4Small       595   842
     A5            421   595
     A6            297   421
     A7            210   297
     A8            148   210
     A9            105   148
     A10            74   105
     B0           2836  4008
     B1           2004  2836
     B2           1418  2004
     B3           1002  1418
     B4            709  1002
     B5            501   709
     C0           2600  3677
     C1           1837  2600
     C2           1298  1837
     C3            918  1298
     C4            649   918
     C5            459   649
     C6            323   459
     Flsa          612   936 
     Flse          612   936
     HalfLetter    396   612

For convenience you can specify the page size by media (e.g. A4, Ledger,
etc.). Otherwise, \fB-page\fP behaves much like
\fB-geometry\fP (e.g.
-page
letter+43+43>).


To position a GIF image, use \fB-page\fP\fI{+-}<x offset>{+-}<y
offset>\fP (e.g. -page +100+200).


For a Postscript page, the image is sized as in \fB-geometry\fP and positioned
relative to the lower left hand corner of the page by
{+-}<\fBx\fP\fIoffset\fP>{+-}<\fBy\fP
\fIoffset>\fP. Use
-page 612x792>, for example, to center the
image within the page. If the image size exceeds the Postscript page, it
is reduced to fit the page.


The default page dimensions for a TEXT image is 612x792.


This option is used in concert with \fB-density\fP.

.TP
.B "-pen \fIcolor"\fP
\fRspecify the pen color for drawing operations
.TP
.B "-pointsize \fIvalue"\fP
\fRpointsize of the Postscript, OPTION1, or TrueType font
.TP
.B "-quality \fIvalue"\fP
\fRJPEG/MIFF/PNG compression level

For the JPEG image format, quality is 0 (worst) to 100 (best). The default
quality is 75.


Quality for the MIFF and PNG image format sets the amount of image compression
(quality / 10) and filter-type (quality % 10). Compression quality values
range from 0 (worst) to 100 (best). If filter-type is 4 or less, the specified
filter-type is used for all scanlines:


     0: none
     1: sub
     2: up
     3: average
     4: Paeth

If filter-type is 5, adaptive filtering is used when quality is greater
than 50 and the image does not have a color map, otherwise no filtering
is used.


If filter-type is 6 or more, adaptive filtering with \fIminimum-sum-of-absolute-values\fP
is used.


The default is quality is 75. Which means nearly the best compression with
adaptive filtering.


For further information, see the PNG
specification.

.TP
.B "-rotate \fIdegrees{<}{>}"\fP
\fRapply Paeth image rotation to the image

Use > to rotate the image only if its width exceeds the height.
< rotates the image \fIonly\fP if its width is less than the
height. For example, if you specify -90> and the image size is
480x640, the image is not rotated by the specified angle. However, if the
image is 640x480, it is rotated by -90 degrees.


Empty triangles left over from rotating the image are filled with the color
defined as \fBbackground\fP (class \fBbackgroundColor\fP). See \fIX(1)\fP
for details.

.TP
.B "-scene \fIvalue{-value}"\fP
\fRimage scene number or range

Use this option to specify an image sequence with a single filename. See
the discussion of \fIfile\fP below for details.
.TP
.B "-shadow \fI<radius>x<sigma>"\fP
\fRshadow the montage
.TP
.B "-sharpen \fI<radius>x<sigma>"\fP
\fRsharpen the image

Use a gaussian operator of the given radius and
standard deviation (sigma). 

.TP
.B "-size \fI<width>x<height>{+offset}"\fP
\fRwidth and height of the image

Use this option to specify the width and height of raw images whose dimensions
are unknown such as \fBGRAY\fP,
\fBRGB\fP, or \fBCMYK\fP. In addition
to width and height, use
\fB-size\fP with an offset to skip any header information in
the image or tell the number of colors in a \fBMAP\fP image
file, (e.g. -size 640x512+256).


For Photo CD images, choose from these sizes:

     192x128
     384x256
     768x512
     1536x1024
     3072x2048

Finally, use this option to choose a particular resolution layer of a JBIG
or JPEG image (e.g. -size 1024x768).

.TP
.B "-stroke \fIcolor"\fP
\fRcolor to use when stroking a graphic primitive

See \fB-draw\fP for further
details.

.TP
.B "-strokewidth \fIvalue"\fP
\fRset the stroke width

See \fB-draw\fP for further details.

.TP
.B "-texture \fIfilename"\fP
\fRname of texture to tile onto the image background
.TP
.B "-tile \fIgeometry"\fP
\fRlayout of images
.TP
.B "-title \fI\"string\""\fP
\fRassign a title to the displayed image

Use this option to assign a specific title to the image. This is assigned
to the image window and is typically displayed in the window title bar.
Optionally you can include the image filename, type, width, height, or
other image attribute by embedding special format characters:

     %b file size
     %c comment
     %d directory
     %e filename extention
     %f filename
     %h height
     %i input filename
     %k number of unique colors
     %l label
     %m magick
     %n number of scenes
     %o output filename
     %p page number
     %q quantum depth
     %s scene number
     %t top of filename
     %u unique temporary filename
     %w width
     %x x resolution
     %y y resolution
     \\n newline
     \\r carriage return

For example,


     -title "%m:%f %wx%h"

produces an image title of MIFF:bird.miff 512x480 for an image
titled bird.miff and whose width is 512 and height is 480.

.TP
.B "-transparent \fIcolor"\fP
\fRmake this color transparent within the image
.TP
.B "-treedepth \fIvalue"\fP
\fRtree depth for the color reduction algorithm

Normally, this integer value is zero or one. A zero or one tells display
to choose an optimal tree depth for the color reduction algorithm

An optimal depth generally allows the best representation of the source
image with the fastest computational speed and the least amount of memory.
However, the default depth is inappropriate for some images. To assure
the best representation, try values between 2 and 8 for this parameter.
Refer to
quantize for more details.


The \fB-colors\fP or \fB-monochrome\fP option is required for this option
to take effect.

.TP
.B "-type \fItype"\fP
\fRthe image type

Choose from:
\fBBilevel\fP, \fBGrayscale\fP, \fBPalette\fP,
\fBPaletteMatte\fP, \fBTrueColor\fP, \fBTrueColorMatte\fP,
\fBColorSeparation\fP, \fBColorSeparationMatte\fP, or \fBOptimize\fP.

.TP
.B "-verbose"
\fRprint detailed information about the image

This information is printed: image scene number; image name; image size;
the image class (\fIDirectClass\fP or \fIPseudoClass\fP); the total number
of unique colors; and the number of seconds to read and transform the image.
Refer to miff for a description of the image class.


If \fB-colors\fP is also specified, the total unique colors in the image
and color reduction error values are printed. Refer to quantize
for a description of these values.

.SH FILES AND FORMATS

By default, the image format is determined by its magic number. To specify
a particular image format, precede the filename with an image format name
and a colon (i.e. ps:image) or specify the image type as the filename suffix
(e.g. image.ps). See \fBconvert(1)\fP for a list of valid image
formats.

When you specify \fBX\fP as your image type, the filename has special
meaning. It specifies an X window by id, name, or
\fBroot\fP. If no filename
is specified, the window is selected by clicking the mouse in the desired
window.

Specify \fIfile\fP as - for standard input, \fIoutput_file\fP as -
for standard output. If \fIfile\fP has the extension \fB.Z\fP or
\fB.gz\fP,
the file is uncompressed with \fBuncompress\fP or
\fBgunzip\fP respectively.
If \fIoutput_file\fP has the extension \fBcompress\fP or \fBgzip\fP
respectively. Finally, precede the image file name with | to pipe to or
from a system command.

Use an optional index enclosed in brackets after a file name to specify
a desired subimage of a multi-resolution image format like Photo CD (e.g.
img0001.pcd[4]) or a range for MPEG images (e.g. video.mpg[50-75]). A subimage
specification can be disjoint (e.g. image.tiff[2,7,4]). For raw images,
specify a subimage with a geometry (e.g. -size
640x512 image.rgb[320x256+50+50]).

Single images are written with the filename you specify. However, multi-part
images (i.e. a multi-page PostScript document with \fB+adjoin\fP specified)
are written with the filename followed by a period (\fB.\fP) and the scene
number. You can change this behavior by embedding a \fBprintf\fP format
specification in the file name. For example,
montages files image00.miff, image01.miff, etc.

Prepend an at sign @ to a filename to read a list of image
filenames from that file. This is convenient in the event you have too
many image filenames to fit on the command line.

Note, a composite MIFF image displayed to an X server with
\fBdisplay\fP
behaves differently than other images. You can think of the composite as
a visual image directory. Choose a particular tile of the composite and
press a button to display it. See \fBdisplay(1)\fP and \fBmiff(5)\fP
.SH X RESOURCES

\fBMontage\fP options can appear on the command line or in your X resource
file. Options on the command line supersede values specified in your X
resource file. See \fBX(1)\fP for more information on X resources.

All \fBmontage\fP options have a corresponding X resource. In addition,
\fBmontage\fP
uses the following X resources:
.TP
.B "background \fI(class Background)"\fP
\fRbackground color

Specifies the preferred color to use for the composite image background.
The default is #ccc.
.TP
.B "borderColor \fI(class BorderColor)"\fP
\fRborder color

Specifies the preferred color to use for the composite image border. The
default is #ccc.
.TP
.B "borderWidth \fI(class BorderWidth)"\fP
\fRborder width

Specifies the width in pixels of the composite image border. The default
is 2.
.TP
.B "font \fI(class Font)"\fP
\fRfont to use

Specifies the name of the preferred font to use when displaying text within
the composite image. The default is 9x15, fixed, or 5x8 determined by the
composite image size.
.TP
.B "matteColor \fI(class MatteColor)"\fP
\fRcolor of the frame

Specify the color of an image frame. A 3D effect is achieved by using highlight
and shadow colors derived from this color. The default value is #697B8F.
.TP
.B "pen \fI(class Pen)"\fP
\fRtext color

Specifies the preferred color to use for text within the composite image.
The default is black.
.TP
.B "title \fI(class Title)"\fP
\fRcomposite image title

This resource specifies the title to be placed at the top of the composite
image. The default is not to place a title at the top of the composite
image.
.SH ENVIRONMENT
.TP
.B "DISPLAY"
\fRTo get the default host, display number, and screen.
.SH ACKNOWLEDGEMENTS

The \fBMIT X Consortium\fP for making network transparent graphics a reality.


\fIMichael Halle\fP, \fBSpatial Imaging Group at MIT\fP, for the initial
implementation of Alan Paeth's image rotation algorithm.


\fIDavid Pensak\fP, \fBImageMagick Studio\fP, for providing a computing
environment that made this program possible.

.SH SEE ALSO

display(1), animate(1), import(1), mogrify(1), convert(1), composite(1)

.SH COPYRIGHT
Copyright (C) 2002 ImageMagick Studio, a non-profit organization dedicated
to making software imaging solutions freely available.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files ("ImageMagick"),
to deal in ImageMagick without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of ImageMagick, and to permit persons to whom the
ImageMagick is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of ImageMagick.

The software is provided "as is", without warranty of any kind, express or
implied, including but not limited to the warranties of merchantability,
fitness for a particular purpose and noninfringement.  In no event shall
ImageMagick Studio be liable for any claim, damages or other liability,
whether in an action of contract, tort or otherwise, arising from, out of
or in connection with ImageMagick or the use or other dealings in
ImageMagick.

Except as contained in this notice, the name of the ImageMagick Studio
shall not be used in advertising or otherwise to promote the sale, use or
other dealings in ImageMagick without prior written authorization from the
ImageMagick Studio.

.SH AUTHORS
John Cristy, ImageMagick Studio LLC
