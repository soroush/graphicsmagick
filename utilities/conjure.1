.TH conjure 1 "Date: 2002/02/15 01:00:00" "ImageMagick"
.SH NAME
conjure - process a Magick Scripting Language (MSL) script

\fBWARNING: Conjure and MSL are in very early development and the
syntax is subject to change!\fP

.SH SYNOPSIS

\fBconjure\fP \fB[\fP \fIoptions\fP \fB]\fP \fIscript.msl\fP
\fB[ [\fP \fIoptions\fP \fB]\fP \fIscript.msl\fP \fB]\fP

.SH DESCRIPTION

The Magick scripting language (MSL) will primarily
benefit those that want to accomplish custom image processing tasks but
do not wish to program, or those that do not have access to a Perl
interpreter or a compiler.  The interpreter is called conjure and here
is an example script:


    <?xml version="1.0" encoding="UTF-8"?>
    <image size="400x400" >
      <read filename="image.gif" />
      <get width="base-width" height="base-height" />
      <resize geometry="%[dimensions]" />
      <get width="width" height="height" />
      <print output=
        "Image sized from %[base-width]x%[base-height]
         to %[width]x%[height].\\n" />
      <write filename="image.png" />
    </image>

invoked with


    conjure -dimensions 400x400 incantation.msl

All operations will closely follow the key/value pairs defined in
PerlMagick, unless otherwise noted.


\fBConjure\fP is in the early stages of development as of
April 2002.


This early announcement is to allow ImageMagick users to contribute ideas 
early in the process so when the scripting language is released it will
be useful/stable from the get-go!  If you want to contribute suggestions
about the Magick scripting language (MSL), post them to
magick-developers@imagemagick.org.

.SH OPTIONS

Options are processed in command line order. Any option you specify on
the command line remains in effect until it is explicitly changed by specifying
the option again with a different effect, or if it is changed by a statement
in the scripting language.


You can define your own keyword/value pairs on the command line.
The script can then use this information when setting values by including
%[keyword] in the string.  For example, if you included
"-dimensions 400x400" on the command line, as illustrated above,
then any string
containing "%[dimensions]" would have 400x400 substituted.
The "%[string]" can be used either an entire string, such as
geometry="%[dimensions]" or as a part of a string such as
filename="%[basename].png".

The keyword can be any string except for the following reserved
strings (in any upper, lower, or mixed case variant): \fBdebug\fP,
\fBhelp\fP, and \fBverbose\fP, whose usage is described below.

The value can be any string.  If
either the keyword or the value contains white space or any
symbols that have special meanings to your shell such as "#",
"|",
or
"%", enclose the string in quotation marks or use "\\" to escape the white
space and special symbols.

Keywords and values are case dependent.  "Key",
"key",
and "KEY" would
be three different keywords.


For a more detailed description of each option, see
\fIImageMagick(1)\fP.

.TP
.B "-debug \fI<events>"\fP
\fRenable debug printout
.TP
.B "-help"
\fRprint usage instructions
.TP
.B "-verbose"
\fRprint detailed information about the image
.TP
.B "-version"
\fRprint ImageMagick version string
.SH MAGICK SCRIPTING LANGUAGE
The Magick Scripting Language (MSL) presently defines the following
elements and their attributes:
.in 15

.in 15
.B "<image>"
.in 20
 \fR
.in 20
Define a new image object.
\fB</image>\fP destroys it. Because of this, if you wish
to reference multiple "subimages" (aka pages or layers),
you can embed one \fBimage\fP element inside of
another. For example:

.in 15
.in 20


    <image>
    <read filename="input.png" />
    <get width="base-width" height="base-height" />
    <image height="base-height" width="base-width">
    <image />
    <write filename="output.mng" />
    </image>

.in 15
.in 20


    <image size="400x400" />

.in 15
.in 15
.B "<group>"
.in 20
 \fR
.in 20
Define a new group of image objects.
By default, images are only valid for the life of
their \fB<image>\fPelement.

.in 15
.in 20


    <image>   -- creates the image
    .....     -- do stuff with it
    </image>  -- dispose of the image

.in 15
.in 20

However, in a group, all images in that group will stay 
around for the life of the group:

.in 15
.in 20


    <group>                           -- start a group
        <image>                       -- create an image
        ....                          -- do stuff
        </image>                      -- NOOP
        <image>                       -- create another image
        ....                          -- do more stuff
        </image>                      -- NOOP
        <write filename="image.mng" />  -- output
    </group>                          -- dispose of both images

.in 15
.in 15
.B "<read>"
.in 20
 \fR
.in 20
Read a new image from a disk file.

.in 15
.in 20


    <read filename="image.gif" />

.in 15
.in 20
To read two images use

.in 15
.in 20


    <read filename="image.gif" />
    <read filename="image.png />

.in 15
.in 15
.B "<write>"
.in 20
 \fR
.in 20
Write the image(s) to disk, either as
a single multiple-image file or multiple ones if necessary.

.in 15
.in 20


     <write filename=image.tiff" />
.in 15
.B "<get>"
.in 20
 \fR
.in 20
Get any attribute recognized by
PerlMagick's GetAttribute() and stores it as an image attribute for later
use. Currently only \fIwidth\fP and \fIheight\fP are supported.
.in 15
.in 20


    <get width="base-width" height="base-height" />
    <print output="Image size is %[base-width]x%[base-height].\\n" />

.in 15
.in 15
.B "<set>"
.in 20
 \fR
.in 20
background, bordercolor, clip-mask, colorspace, density,
magick, mattecolor, opacity.  Set an attribute recognized by
PerlMagick's GetAttribute().
.in 15
.in 15
.B "<border>"
.in 20
 \fR
.in 20
    fill, geometry, height, width
.in 15
.in 15
.B "<blur>"
.in 20
 \fR
.in 20
    radius, sigma
.in 15
.in 15
.B "<charcoal>"
.in 20
 \fR
.in 20
    radius, sigma
.in 15
.in 15
.B "<chop>"
.in 20
 \fR
.in 20
    geometry, height, width, x, y
.in 15
.in 15
.B "<crop>"
.in 20
 \fR
.in 20
    geometry, height, width, x, y
.in 15
.in 15
.B "<despeckle>"
.in 20
 \fR
.in 15
.B "<emboss>"
.in 20
 \fR
.in 20
    radius, sigma
.in 15
.in 15
.B "<enhance>"
.in 20
 \fR
.in 15
.B "<equalize>"
.in 20
 \fR
.in 15
.B "<flip>"
.in 20
 \fR
.in 15
.B "<flop>"
.in 20
 \fR
.in 15
.B "<frame>"
.in 20
 \fR
.in 20
    fill, geometry, height, width, x, y, inner, outer
.in 15
.in 15
.B "<get>"
.in 20
 \fR
.in 20
    height, width
.in 15
.in 15
.B "<image>"
.in 20
 \fR
.in 20
    background, color, id, size
.in 15
.in 15
.B "<magnify>"
.in 20
 \fR
.in 15
.B "<minify>"
.in 20
 \fR
.in 15
.B "<normalize>"
.in 20
 \fR
.in 15
.B "<print>"
.in 20
 \fR
.in 20
    output
.in 15
.in 15
.B "<read>"
.in 20
 \fR
.in 15
.B "<resize>"
.in 20
 \fR
.in 20
    blur, filter, geometry, height, width
.in 15
.in 15
.B "<roll>"
.in 20
 \fR
.in 20
    geometry, x, y
.in 15
.in 15
.B "<rotate>"
.in 20
 \fR
.in 20
    degrees
.in 15
.in 15
.B "<sample>"
.in 20
 \fR
.in 20
    geometry, height, width
.in 15
.in 15
.B "<scale>"
.in 20
 \fR
.in 20
    geometry, height, width
.in 15
.in 15
.B "<sharpen>"
.in 20
 \fR
.in 20
    radius, sigma
.in 15
.in 15
.B "<shave>"
.in 20
 \fR
.in 20
    geometry, height, width
.in 15
.in 15
.B "<shear>"
.in 20
 \fR
.in 20
    x, y
.in 15
.in 15
.B "<solarize>"
.in 20
 \fR
.in 20
    threshold
.in 15
.in 15
.B "<spread>"
.in 20
 \fR
.in 20
    radius
.in 15
.in 15
.B "<stegano>"
.in 20
 \fR
.in 20
    image
.in 15
.in 15
.B "<stereo>"
.in 20
 \fR
.in 20
    image
.in 15
.in 15
.B "<swirl>"
.in 20
 \fR
.in 20
    degrees
.in 15
.in 15
.B "<texture>"
.in 20
 \fR
.in 20
    image
.in 15
.in 15
.B "<threshold>"
.in 20
 \fR
.in 20
    threshold
.in 15
.in 15
.B "<transparent>"
.in 20
 \fR
.in 20
    color
.in 15
.in 15
.B "<trim>"
.in 20
 \fR

.SH SEE ALSO

animate(1), display(1), composite(1), convert(1), identify(1),
import(1), mogrify(1), montage(1)

.SH COPYRIGHT

\fBCopyright (C) 2002 ImageMagick Studio\fP

\fBPermission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files ("ImageMagick"),
to deal in ImageMagick without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of ImageMagick, and to permit persons to whom the ImageMagick
is furnished to do so, subject to the following conditions:\fP

\fBThe above copyright notice and this permission notice shall be included
in all copies or substantial portions of ImageMagick.\fP

\fBThe software is provided "as is", without warranty of any kind, express
or implied, including but not limited to the warranties of merchantability,
fitness for a particular purpose and noninfringement.In no event shall
ImageMagick Studio be liable for any claim, damages or other liability,
whether in an action of contract, tort or otherwise, arising from, out
of or in connection with ImageMagick or the use or other dealings in
ImageMagick.\fP

\fBExcept as contained in this notice, the name of the
ImageMagick Studio LLC shall not be used in advertising or otherwise to
promote the sale, use or other dealings in ImageMagick without prior written
authorization from the ImageMagick Studio.\fP
.SH AUTHORS

\fI
John Cristy, ImageMagick Studio LLC,
.in 7
Glenn Randers-Pehrson, ImageMagick Studio LLC,
.in 7
Leonard Rosenthol, ImageMagick Studio LLC.
\fP

