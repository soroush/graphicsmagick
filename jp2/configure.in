dnl Process this file with autoconf to produce a configure script.
AC_INIT(README)
AM_CONFIG_HEADER(src/libjasper/include/jasper/jas_config.h)

################################################################################
# Copyright (c) 2001-2003 Michael David Adams.
# All rights reserved.
#
# The complete licensing terms for this software can be found in the file
# named "LICENSE" in this software distribution.
################################################################################

dnl Initialize version information.
dnl For each new release, increment:
dnl     JAS_MICRO_VERSION
dnl     JAS_INTERFACE_AGE
dnl     JAS_BINARY_AGE
dnl If any functions have been added, set JAS_INTERFACE_AGE to 0.
dnl If backwards compatability has been broken, set JAS_BINARY_AGE and
dnl JAS_INTERFACE_AGE to 0.
JAS_MAJOR_VERSION=1
JAS_MINOR_VERSION=700
JAS_MICRO_VERSION=2
JAS_INTERFACE_AGE=0
JAS_BINARY_AGE=0
JAS_VERSION=$JAS_MAJOR_VERSION.$JAS_MINOR_VERSION.$JAS_MICRO_VERSION
AC_SUBST(JAS_MAJOR_VERSION)
AC_SUBST(JAS_MINOR_VERSION)
AC_SUBST(JAS_MICRO_VERSION)
AC_SUBST(JAS_INTERFACE_AGE)
AC_SUBST(JAS_BINARY_AGE)
AC_SUBST(JAS_VERSION)
AC_DEFINE_UNQUOTED(JAS_VERSION, "$JAS_VERSION")

# This stuff is for RPM building only.
JAS_RPM_RELEASE=1
AC_SUBST(JAS_RPM_RELEASE)

# Initialize version information for libtool.
LT_RELEASE=$JAS_MAJOR_VERSION.$JAS_MINOR_VERSION
LT_CURRENT=`expr $JAS_MICRO_VERSION - $JAS_INTERFACE_AGE`
LT_REVISION=$JAS_INTERFACE_AGE
LT_AGE=`expr $JAS_BINARY_AGE - $JAS_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

# Indicate a configure-based build is being used.
AC_DEFINE(JAS_CONFIGURE)

################################################################################
# Perform automake initialization.
################################################################################

AM_INIT_AUTOMAKE(jasper, $JAS_VERSION)

################################################################################
# Detect the canonical host and target build environment.
################################################################################

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

################################################################################
# Checks for programs.
################################################################################

AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

AM_DISABLE_SHARED
AM_PROG_LIBTOOL

AC_PATH_XTRA

################################################################################
# Check for the IJG JPEG library.
################################################################################

# Allow the user to explicitly specify whether the JPEG library is present.
AC_ARG_ENABLE(libjpeg,
[  --disable-libjpeg    Force the IJG JPEG library to be ignored],
[
case "${enableval}" in
yes)
	ENABLE_LIBJPEG=yes;;
no)
	ENABLE_LIBJPEG=no;;
*)
	AC_MSG_ERROR(bad value ${enableval} for --disable-libjpeg)
	;;
esac
], ENABLE_LIBJPEG=yes)

HAVE_LIBJPEG=no
if test $ENABLE_LIBJPEG = yes; then
	# Check for the JPEG library.
	AC_CHECK_LIB(jpeg, jpeg_destroy, HAVE_LIBJPEG=yes, HAVE_LIBJPEG=no)
	if test $HAVE_LIBJPEG = yes; then
		LIBS="$LIBS -ljpeg"
	fi
fi
AM_CONDITIONAL(HAVE_LIBJPEG, test $HAVE_LIBJPEG = yes)

################################################################################
# Check for OpenGL libraries.
################################################################################

AC_ARG_WITH(glut-include-dir,
[  --with-glut-include-dir=DIR    Set GLUT include directory.],
[
	case "$withval" in
	/*)
		CFLAGS="$CFLAGS -I$withval"
		CPPFLAGS="$CPPFLAGS -I$withval";;
	*)
		AC_MSG_ERROR(--with-glut-include-dir requires absolute path)
		;;
	esac
],
)
AC_ARG_WITH(glut-lib-dir,
[  --with-glut-lib-dir=DIR        Set GLUT library directory.],
[
	case "$withval" in
	/*)
		LIBS="$LIBS -L$withval";;
	*)
		AC_MSG_ERROR(--with-glut-lib-dir requires absolute path)
		;;
	esac
],
)

AC_ARG_ENABLE(opengl,
[  --disable-opengl    Disable use of OpenGL. ],
[
	case "$enableval" in
	yes)
		ENABLE_OPENGL=yes;;
	no)
		ENABLE_OPENGL=no;;
	*)
		AC_MSG_ERROR(bad value ${enableval} for --disable-libjpeg)
		;;
	esac
],
ENABLE_OPENGL=yes)

HAVE_OPENGL=no
OPENGL_LIBS=""
if test $ENABLE_OPENGL = yes; then
	if test $HAVE_OPENGL = no; then
		TMPLIBS="-lglut -lGL -lGLU $X_PRE_LIBS -lX11 -lXmu -lXi -lXext -lXt $X_EXTRA_LIBS $X_LIBS"
		AC_CHECK_LIB(glut, glutInit, [HAVE_OPENGL=yes;
		  OPENGL_LIBS=$TMPLIBS], HAVE_OPENGL=no, $TMPLIBS)
	fi
	AC_CHECK_HEADER(GL/glut.h,, [HAVE_OPENGL=no; OPENGL_LIBS="";])
fi

AM_CONDITIONAL(HAVE_OPENGL, test $HAVE_OPENGL = yes)
AC_SUBST(OPENGL_LIBS)
AC_MSG_CHECKING([whether OpenGL libraries and headers were detected])
AC_MSG_RESULT($HAVE_OPENGL)

################################################################################
# Check for other libraries.
################################################################################

dnl Check for the math library.
AC_CHECK_LIB(m, main)

################################################################################
# Check for header files.
################################################################################

AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h stdint.h stdbool.h io.h windows.h sys/types.h stdlib.h stddef.h)

################################################################################
# Check for typedefs, structures, and compiler characteristics.
################################################################################

AC_C_BIGENDIAN
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(unsigned short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(unsigned int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(unsigned long)
AC_CHECK_SIZEOF(long long)
AC_CHECK_SIZEOF(unsigned long long)

dnl AC_CHECK_TYPE(bool, int)
AC_CHECK_TYPE(uchar, unsigned char)
AC_CHECK_TYPE(ushort, unsigned short)
AC_CHECK_TYPE(uint, unsigned int)
AC_CHECK_TYPE(ulong, unsigned long)
AC_CHECK_TYPE(longlong, long long)
AC_CHECK_TYPE(ulonglong, unsigned long long)
AC_CHECK_TYPE(ssize_t, int)

################################################################################
# Checks for library functions.
################################################################################

AC_FUNC_VPRINTF

################################################################################
# Enable/disable special memory allocator for debugging.
################################################################################

AC_ARG_ENABLE(dmalloc,
[  --enable-dmalloc    use special memory allocator for debugging],
[
case "${enableval}" in
yes)
	AC_DEFINE(DEBUG_MEMALLOC)
	;;
no)
	;;
*)
	AC_MSG_ERROR(bad value ${enableval} for --enable-dmalloc)
	;;
esac
], )

################################################################################
# Enable/disable extra code for debugging.
################################################################################

AC_ARG_ENABLE(debug,
[  --enable-debug    add extra code for debugging],
[
case "${enableval}" in
yes)
	debug=true
	AC_DEFINE(DEBUG)
	AC_DEFINE(DEBUG_OVERFLOW)
	if test "$GCC" = yes; then
		CFLAGS="-g -O0"
	fi
	;;
no)
	debug=false
	;;
*)
	AC_MSG_ERROR(bad value ${enableval} for --enable-debug)
	;;
esac
], [debug=false])

if test "$GCC" = yes; then
	CFLAGS="$CFLAGS -W -Wall -Wno-long-long -Wformat -Wmissing-prototypes -Wstrict-prototypes -pedantic"
fi

################################################################################
# Generate the makefiles.
################################################################################

AC_OUTPUT([
Makefile
src/Makefile
src/appl/Makefile
src/libjasper/Makefile
src/libjasper/base/Makefile
src/libjasper/bmp/Makefile
src/libjasper/include/Makefile
src/libjasper/include/jasper/Makefile
src/libjasper/jp2/Makefile
src/libjasper/jpc/Makefile
src/libjasper/jpg/Makefile
src/libjasper/mif/Makefile
src/libjasper/pgx/Makefile
src/libjasper/pnm/Makefile
src/libjasper/ras/Makefile
src/msvc/Makefile
jasper.spec
])
